{"version":3,"file":"static/js/67.915a73b0.chunk.js","mappings":"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","sources":["components/ExperienceYear/ExperienceYear.tsx","webpack://personal-website/./src/components/TypingText/TypingText.module.scss?0bd0","components/TypingText/TypingText.tsx","webpack://personal-website/./src/pages/University/University.module.scss?e86b","pages/University/University.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Bubble from \"../Bubble\";\r\n\r\nexport interface Experience {\r\n    name: string;\r\n    company: string;\r\n    period: string;\r\n    description: string | React.ReactNode;\r\n}\r\n\r\nexport interface ExperienceTimeline {\r\n    [year: string]: Experience[];\r\n}\r\n\r\n// TODO: This is old code, so its style is not completely consistent with the rest of the website.\r\n// Fix this another time.\r\ninterface ExperienceYearProps {\r\n    year: string;\r\n    experiences: Experience[];\r\n    stripeColor: [number, number, number]; // [R,G,B]\r\n}\r\n\r\nconst ExperienceYear = ({ year, experiences, stripeColor }: ExperienceYearProps) => {\r\n    return (\r\n        <ExperienceYearWrapper>\r\n            <Year>\r\n                <Bubble\r\n                    color={`rgb(${stripeColor[0]},${stripeColor[1]},${stripeColor[2]})`}\r\n                    fill={`rgb(${stripeColor[0]},${stripeColor[1]},${stripeColor[2]})`}\r\n                >\r\n                    {year}\r\n                </Bubble>\r\n            </Year>\r\n            {experiences.map(({ name, company, period, description }: Experience) => (\r\n                <>\r\n                    <Experience>\r\n                        <ExperienceHeader>\r\n                            <b>{name}</b>&nbsp;@&nbsp;<i>{company}</i>\r\n                            <b style={{ marginLeft: \"auto\" }}>{period}</b>\r\n                        </ExperienceHeader>\r\n                        {description}\r\n                    </Experience>\r\n                </>\r\n            ))}\r\n        </ExperienceYearWrapper>\r\n    );\r\n};\r\n\r\nconst ExperienceYearWrapper = styled.div`\r\n    margin-bottom: 1.4rem;\r\n`;\r\n\r\nconst Year = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    gap: 0.5rem;\r\n`;\r\n\r\nconst Experience = styled.div`\r\n    margin-bottom: 1rem;\r\n    & > p {\r\n        font-family: \"Roboto\", sans-serif;\r\n        color: #5f5f5f;\r\n    }\r\n`;\r\n\r\nconst ExperienceHeader = styled.div`\r\n    display: flex;\r\n    margin-bottom: 0.2em;\r\n`;\r\n\r\nexport default ExperienceYear;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TypingText_container__kbXkt\",\"text\":\"TypingText_text__fImM-\",\"blink\":\"TypingText_blink__QvsZ3\"};","import React, { useEffect } from \"react\";\r\nimport styles from \"./TypingText.module.scss\";\r\n\r\ninterface TypingTextProps {\r\n    textOptions?: string[];\r\n    color?: string;\r\n}\r\n\r\nconst TypingText = ({ textOptions = [\"\"], color = \"#eb7b7b\" }: TypingTextProps) => {\r\n    useEffect(() => {\r\n        let running = true;\r\n        let textOptionIndex = Math.floor(Math.random() * textOptions.length);\r\n        const animationLoop = () => {\r\n            if (!running) return;\r\n\r\n            const lastDelay = playTypingAnimation(textOptions[textOptionIndex], \"typing-text\");\r\n            textOptionIndex = (textOptionIndex + 1) % textOptions.length;\r\n            setTimeout(() => animationLoop(), lastDelay);\r\n        };\r\n\r\n        animationLoop();\r\n        return () => {\r\n            running = false;\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {/* temporarily using id, limitation: does not work w multiple typingtext components */}\r\n            <span className={styles.text} id=\"typing-text\" style={{ color: color }}></span>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction playTypingAnimation(text: string, textContainerId: string): number {\r\n    const container = document.querySelector(`#${textContainerId}`);\r\n    if (!container) return 0;\r\n\r\n    let lastDelay = 0;\r\n    for (let i = 0; i < text.length; i++) {\r\n        lastDelay = Math.random() * 180 + 100 + lastDelay;\r\n        setTimeout(() => {\r\n            container.innerHTML += text[i];\r\n        }, lastDelay);\r\n    }\r\n\r\n    lastDelay += 6500 + Math.random() * 1800;\r\n    for (let i = 0; i < text.length; i++) {\r\n        lastDelay = Math.random() * 100 + 80 + lastDelay;\r\n        setTimeout(() => {\r\n            container.innerHTML = container.innerHTML.slice(0, container.innerHTML.length - 1);\r\n        }, lastDelay);\r\n    }\r\n\r\n    return lastDelay;\r\n}\r\n\r\nexport default TypingText;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"University_container__G8-ji\",\"introduction\":\"University_introduction__3jGTG\",\"links\":\"University_links__HoTfl\",\"description\":\"University_description__OOQuL\",\"innerDescription\":\"University_innerDescription__jdrdH\",\"experienceContainer\":\"University_experienceContainer__IfF57\"};","import React from \"react\";\r\nimport styles from \"./University.module.scss\";\r\n\r\nimport ExperienceYear, { ExperienceTimeline } from \"../../components/ExperienceYear\";\r\nimport TypingText from \"../../components/TypingText\";\r\n\r\nconst experiences: ExperienceTimeline = {\r\n    \"2024\": [\r\n        {\r\n            name: \"ICPC Greater New York Regional Competitor\",\r\n            company: \"Intercollegiate Programming Contest (ICPC)\",\r\n            period: \"Summer 2024\",\r\n            description:\r\n                \"Qualified and competed in the ICPC Greater New York Regional, representing Princeton University.\"\r\n        }\r\n    ],\r\n    \"2023\": [\r\n        {\r\n            name: \"Software Engineer\",\r\n            company: \"Hack4Impact\",\r\n            period: \"Fall 2023 â€“ Spring 2025\",\r\n            description:\r\n                \"Hack4Impact connects student software developers with non-profits and other socially responsible businesses to develop powerful new tools for social change. I am currently working on a project to help NJTree non-profit manage their tree planting and logging operations.\"\r\n        },\r\n        {\r\n            name: \"Spaceport America Cup Competitor\",\r\n            company: \"Princeton Rocketry Club\",\r\n            period: \"Fall 2023 â€“ Spring 2024\",\r\n            description:\r\n                \"Designing and implementing dashboard application to communicate with and display avionics and during-flight data to on-ground team. Working to launch fully team-built rocket to up to 30,000 feet, deploying drone payload, and recovering both.\"\r\n        },\r\n        {\r\n            name: \"Director & Project Manager\",\r\n            company: \"ResInDe\",\r\n            period: \"Spring 2023 â€“ Fall 2023\",\r\n            description:\r\n                \"ResInDe is Prince University's campus community for design & product thinking. Currently, I lead a subteam for the official Princeton Universityâ€™s Site Builder (PSB), where I am responsible for managing a team of over 7 developers and UI/UX researchers.\"\r\n        }\r\n    ],\r\n    \"2022\": [\r\n        {\r\n            name: \"Lead Software Engineer\",\r\n            company: \"The Daily Princetonian Publishing Co.\",\r\n            period: \"Fall 2022 â€“ Fall 2024\",\r\n            description:\r\n                \"The Daily Princetonian is the largest independent student newspaper of Princeton University. I am responsible for building and maintaining web apps that serve over 2400 daily users.\"\r\n        },\r\n        {\r\n            name: \"Start-Up iOS/Android Developer\",\r\n            company: \"Pupil (GetPupil Inc.)\",\r\n            period: \"Fall 2022 â€“ Summer 2023\",\r\n            description:\r\n                \"Pupil is a startup that serves FGLI and other marginalized students and provides a platform for mentor/mentees of similar backgrounds to interact. I have been responsible for working on the product for the release of the MVP that will serve over 1200 registered users.\"\r\n        }\r\n    ],\r\n    \"2021\": [\r\n        {\r\n            name: \"National & States Champion Programming\",\r\n            company: \"Business Professionals of America (BPA)\",\r\n            period: \"2021\",\r\n            description:\r\n                \"Attend programming competitions on the regional, states, and national levels, hosted by the Business Professionals of America. Won 1st Place Nationals (US) C++ Competition & 7th Place Nationals (US) Python Competition & 1st Place States (FL) C++ Competition & 1st Place States (FL) Python Competition.\"\r\n        }\r\n    ]\r\n};\r\n\r\nconst TypingTextOptions = [\"the daily princetonian\", \"bpa\", \"resinde\", \"rocketry\", \"hack4impact\"];\r\n\r\nconst University = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.introduction}>\r\n                <h1>\r\n                    university activities @ <br /> <TypingText color=\"#89cfa9\" textOptions={TypingTextOptions} />\r\n                </h1>\r\n                <div className={styles.description}>\r\n                    <div className={styles.innerDescription}>\r\n                        <p>\r\n                            <span style={{ fontWeight: 500 }}>(academics) </span>\r\n                            <span\r\n                                style={{\r\n                                    fontFamily: \"Satoshi-Variable\",\r\n                                    fontWeight: 400,\r\n                                    color: \"4A4A4A\"\r\n                                }}\r\n                            >\r\n                                im as much a software engineer as i am a student. i actively research in theoretical\r\n                                computer science and software engineering at princeton.\r\n                            </span>\r\n                        </p>\r\n                        <p>\r\n                            <span style={{ fontWeight: 500 }}>(my activities) </span>\r\n                            <span\r\n                                style={{\r\n                                    fontFamily: \"Satoshi-Variable\",\r\n                                    fontWeight: 400,\r\n                                    color: \"4A4A4A\"\r\n                                }}\r\n                            >\r\n                                outside of industry, i enjoy developing for a smaller community on campus. below are the\r\n                                student organizations im involved in.\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.experienceContainer}>\r\n                    {Object.keys(experiences)\r\n                        .reverse()\r\n                        .map((year: string) => (\r\n                            <ExperienceYear\r\n                                key={year}\r\n                                year={year}\r\n                                experiences={experiences[year]}\r\n                                stripeColor={[\r\n                                    137 + (parseInt(year) - 2021) * 8,\r\n                                    207 + (parseInt(year) - 2021) * 12,\r\n                                    169 + (parseInt(year) - 2021) * 20\r\n                                ]}\r\n                            />\r\n                        ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default University;\r\n"],"names":["ExperienceYearWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Year","_templateObject2","Experience","_templateObject3","ExperienceHeader","_templateObject4","_ref","year","experiences","stripeColor","_jsxs","children","_jsx","Bubble","color","concat","fill","map","_ref2","name","company","period","description","_Fragment","style","marginLeft","_ref$textOptions","textOptions","_ref$color","useEffect","running","textOptionIndex","Math","floor","random","length","animationLoop","lastDelay","text","textContainerId","container","document","querySelector","_loop","i","setTimeout","innerHTML","slice","playTypingAnimation","className","styles","id","TypingTextOptions","TypingText","fontWeight","fontFamily","Object","keys","reverse","ExperienceYear","parseInt"],"sourceRoot":""}