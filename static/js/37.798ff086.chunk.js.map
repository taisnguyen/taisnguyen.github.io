{"version":3,"file":"static/js/37.798ff086.chunk.js","mappings":"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","sources":["components/ExperienceYear/ExperienceYear.tsx","webpack://personal-website/./src/components/TypingText/TypingText.module.scss?0bd0","components/TypingText/TypingText.tsx","webpack://personal-website/./src/pages/Work/Work.module.scss?eede","pages/Work/Work.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Bubble from \"../Bubble\";\r\n\r\nexport interface Experience {\r\n    name: string;\r\n    company: string;\r\n    period: string;\r\n    description: string | React.ReactNode;\r\n}\r\n\r\nexport interface ExperienceTimeline {\r\n    [year: string]: Experience[];\r\n}\r\n\r\n// TODO: This is old code, so its style is not completely consistent with the rest of the website.\r\n// Fix this another time.\r\ninterface ExperienceYearProps {\r\n    year: string;\r\n    experiences: Experience[];\r\n    stripeColor: [number, number, number]; // [R,G,B]\r\n}\r\n\r\nconst ExperienceYear = ({ year, experiences, stripeColor }: ExperienceYearProps) => {\r\n    return (\r\n        <ExperienceYearWrapper>\r\n            <Year>\r\n                <Bubble\r\n                    color={`rgb(${stripeColor[0]},${stripeColor[1]},${stripeColor[2]})`}\r\n                    fill={`rgb(${stripeColor[0]},${stripeColor[1]},${stripeColor[2]})`}\r\n                >\r\n                    {year}\r\n                </Bubble>\r\n            </Year>\r\n            {experiences.map(({ name, company, period, description }: Experience) => (\r\n                <>\r\n                    <Experience>\r\n                        <ExperienceHeader>\r\n                            <b>{name}</b>&nbsp;@&nbsp;<i>{company}</i>\r\n                            <b style={{ marginLeft: \"auto\" }}>{period}</b>\r\n                        </ExperienceHeader>\r\n                        {description}\r\n                    </Experience>\r\n                </>\r\n            ))}\r\n        </ExperienceYearWrapper>\r\n    );\r\n};\r\n\r\nconst ExperienceYearWrapper = styled.div`\r\n    margin-bottom: 1.4rem;\r\n`;\r\n\r\nconst Year = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    gap: 0.5rem;\r\n`;\r\n\r\nconst Experience = styled.div`\r\n    margin-bottom: 1rem;\r\n    & > p {\r\n        font-family: \"Roboto\", sans-serif;\r\n        color: #5f5f5f;\r\n    }\r\n`;\r\n\r\nconst ExperienceHeader = styled.div`\r\n    display: flex;\r\n    margin-bottom: 0.2em;\r\n`;\r\n\r\nexport default ExperienceYear;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TypingText_container__kbXkt\",\"text\":\"TypingText_text__fImM-\",\"blink\":\"TypingText_blink__QvsZ3\"};","import React, { useEffect } from \"react\";\r\nimport styles from \"./TypingText.module.scss\";\r\n\r\ninterface TypingTextProps {\r\n    textOptions?: string[];\r\n    color?: string;\r\n}\r\n\r\nconst TypingText = ({ textOptions = [\"\"], color = \"#eb7b7b\" }: TypingTextProps) => {\r\n    useEffect(() => {\r\n        let running = true;\r\n        let textOptionIndex = Math.floor(Math.random() * textOptions.length);\r\n        const animationLoop = () => {\r\n            if (!running) return;\r\n\r\n            const lastDelay = playTypingAnimation(textOptions[textOptionIndex], \"typing-text\");\r\n            textOptionIndex = (textOptionIndex + 1) % textOptions.length;\r\n            setTimeout(() => animationLoop(), lastDelay);\r\n        };\r\n\r\n        animationLoop();\r\n        return () => {\r\n            running = false;\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {/* temporarily using id, limitation: does not work w multiple typingtext components */}\r\n            <span className={styles.text} id=\"typing-text\" style={{ color: color }}></span>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction playTypingAnimation(text: string, textContainerId: string): number {\r\n    const container = document.querySelector(`#${textContainerId}`);\r\n    if (!container) return 0;\r\n\r\n    let lastDelay = 0;\r\n    for (let i = 0; i < text.length; i++) {\r\n        lastDelay = Math.random() * 180 + 100 + lastDelay;\r\n        setTimeout(() => {\r\n            container.innerHTML += text[i];\r\n        }, lastDelay);\r\n    }\r\n\r\n    lastDelay += 6500 + Math.random() * 1800;\r\n    for (let i = 0; i < text.length; i++) {\r\n        lastDelay = Math.random() * 100 + 80 + lastDelay;\r\n        setTimeout(() => {\r\n            container.innerHTML = container.innerHTML.slice(0, container.innerHTML.length - 1);\r\n        }, lastDelay);\r\n    }\r\n\r\n    return lastDelay;\r\n}\r\n\r\nexport default TypingText;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Work_container__1+Ksk\",\"introduction\":\"Work_introduction__ix+Tr\",\"links\":\"Work_links__pcqGL\",\"description\":\"Work_description__JkHM0\",\"innerDescription\":\"Work_innerDescription__0zkLS\",\"experienceContainer\":\"Work_experienceContainer__oJal8\"};","import React, { useEffect } from \"react\";\r\nimport styles from \"./Work.module.scss\";\r\n\r\nimport { ReactComponent as JoyConBaseIcon } from \"../../assets/joy-con-base-icon.svg\";\r\nimport { ReactComponent as JoyConTopIcon } from \"../../assets/joy-con-top-icon.svg\";\r\nimport { ReactComponent as GithubIcon } from \"../../assets/github-icon.svg\";\r\n\r\nimport ExperienceYear, { ExperienceTimeline } from \"../../components/ExperienceYear\";\r\nimport Bubble from \"../../components/Bubble\";\r\nimport TypingText from \"../../components/TypingText\";\r\n\r\nconst experiences: ExperienceTimeline = {\r\n    \"2024\": [\r\n        {\r\n            name: \"Software Engineer Intern\",\r\n            company: \"Microsoft\",\r\n            period: \"Summer 2024\",\r\n            description:\r\n                \"Extended filtering capabilities for high-demand pub/sub service processing 1 billion requests daily, exposing contract changes for partners to define KQL queries against incoming payload data. Achieved and maintained sub-5ms latencies under 5x-10x production-scale testing and benchmarking.\"\r\n        }\r\n    ],\r\n    \"2023\": [\r\n        {\r\n            name: \"Software Engineer Intern\",\r\n            company: \"Fusion Systems Group\",\r\n            period: \"Summer 2023\",\r\n            description:\r\n                \"Worked on the restaurant chain management system (F&B SaaS) to build new key features that allow over 1000 restaurants across 4 countries to manage their business operations.\"\r\n        }\r\n    ],\r\n    \"2022\": [\r\n        {\r\n            name: \"Machine Learning Intern\",\r\n            company: \"QuantCap LLC\",\r\n            period: \"Winter 2022\",\r\n            description:\r\n                \"Responsible for the start-to-finish analysis, design, and implementation of profitable betting strategies, including data collection, data cleaning, featur, model training, and backtesting.\"\r\n        }\r\n    ],\r\n    \"2021\": [\r\n        {\r\n            name: \"Software Engineer Intern\",\r\n            company: \"Broward County Public Schools\",\r\n            period: \"Summer 2021\",\r\n            description:\r\n                \"Responsible for the extension and management of module-based administrative system (SaaS) during pivotal transition from paper to digital, with technologies including ASP.NET, C#, MSSQL/T-SQL, and JS.\"\r\n        },\r\n        {\r\n            name: \"Engineering Intern\",\r\n            company: \"Museum of Discovery and Science, Inc.\",\r\n            period: \"October 2020 – August 2021\",\r\n            description:\r\n                \"Responsible for designing a project to be implemented in the museum displays, including an AR-based exhibit with technologies including Unity, C#, and Maya.\"\r\n        }\r\n    ]\r\n};\r\n\r\nconst TypingTextOptions = [\"msft\", \"fusion systems\", \"quantcap llc\", \"bcps\", \"mods\", \"cmu\"];\r\n\r\nconst Work = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.introduction}>\r\n                <h1>\r\n                    work experience @ <br /> <TypingText color=\"#81a6f0\" textOptions={TypingTextOptions} />\r\n                </h1>\r\n                <div className={styles.description}>\r\n                    <div className={styles.innerDescription}>\r\n                        <p>\r\n                            <span style={{ fontWeight: 500 }}>(industry) </span>\r\n                            <span\r\n                                style={{\r\n                                    fontFamily: \"Satoshi-Variable\",\r\n                                    fontWeight: 400,\r\n                                    color: \"4A4A4A\"\r\n                                }}\r\n                            >\r\n                                im a software engineer with industry experience building scalable and performant\r\n                                systems. below are the positions ive held.\r\n                            </span>\r\n                        </p>\r\n                        <p>\r\n                            <span style={{ fontWeight: 500 }}>(my experiences) </span>\r\n                            <span\r\n                                style={{\r\n                                    fontFamily: \"Satoshi-Variable\",\r\n                                    fontWeight: 400,\r\n                                    color: \"4A4A4A\"\r\n                                }}\r\n                            >\r\n                                a lot of my work experience is in fullstack software engineering, where i have built and\r\n                                maintained production systems.\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.experienceContainer}>\r\n                    {Object.keys(experiences)\r\n                        .reverse()\r\n                        .map((year: string) => (\r\n                            <ExperienceYear\r\n                                key={year}\r\n                                year={year}\r\n                                experiences={experiences[year]}\r\n                                stripeColor={[\r\n                                    191 + (parseInt(year) - 2021) * 8,\r\n                                    224 + (parseInt(year) - 2021) * 8,\r\n                                    205 + (parseInt(year) - 2021) * 22\r\n                                ]}\r\n                            />\r\n                        ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Work;\r\n"],"names":["ExperienceYearWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Year","_templateObject2","Experience","_templateObject3","ExperienceHeader","_templateObject4","_ref","year","experiences","stripeColor","_jsxs","children","_jsx","Bubble","color","concat","fill","map","_ref2","name","company","period","description","_Fragment","style","marginLeft","_ref$textOptions","textOptions","_ref$color","useEffect","running","textOptionIndex","Math","floor","random","length","animationLoop","lastDelay","text","textContainerId","container","document","querySelector","_loop","i","setTimeout","innerHTML","slice","playTypingAnimation","className","styles","id","TypingTextOptions","TypingText","fontWeight","fontFamily","Object","keys","reverse","ExperienceYear","parseInt"],"sourceRoot":""}